

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.xml.stream.XMLStreamException;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;

/**
 *
 * @author lovse
 */
public class Lab_3Form extends javax.swing.JFrame {

    /**
     * Creates new form Lab_3Form
     */
    public Lab_3Form() {
        initComponents();
    }

//        jTree1.setModel(new DefaultTreeModel(main));



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        create_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        conpute_regions_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        compute_countries_button = new javax.swing.JButton();
        compute_companies_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        create_button.setText("create database");
        create_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    create_db(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        delete_button.setText("delete database");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    delete_db(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        conpute_regions_button.setText("compute regions");
        conpute_regions_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    compute_regions(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                } catch (XMLStreamException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "entity", "Объем ежегодного потребления, т."
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        compute_countries_button.setText("compute countries");
        compute_countries_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    compute_countries(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                } catch (XMLStreamException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        compute_companies_button.setText("compute companies");
        compute_companies_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    compute_companies(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                } catch (XMLStreamException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(compute_countries_button)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(create_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete_button, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                        .addComponent(conpute_regions_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(compute_companies_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(create_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete_button)
                        .addGap(18, 18, 18)
                        .addComponent(conpute_regions_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(compute_countries_button)
                        .addGap(18, 18, 18)
                        .addComponent(compute_companies_button))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String choose_file(){

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("."));
        int response = fileChooser.showOpenDialog(null);

        String file = null;
        if(response == JFileChooser.APPROVE_OPTION){
            file = fileChooser.getSelectedFile().getAbsolutePath();
            System.out.println(file);
        }
        return file;
    }

    private void create_db(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButton2ActionPerformed

        // choosing which file to get data from

        String file = choose_file();

        // reading data fro excel
        ExcelProvider reactors = new ExcelProvider();
        ArrayList<SQLTable> tables = reactors.read_data_for_db(file);

        // connecting to a db
        DatabaseCreateor createor = new DatabaseCreateor();
        tables.forEach(b->{
            try {
                createor.createTabel(b);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
            try {
                createor.fillTable( b);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        });

        createor.addForeingKey("sites", "units","id", "site" );
        createor.addForeingKey("countries","sites", "id", "place");
        createor.addForeingKey("companies", "sites","id","operator");
        createor.addForeingKey("regions", "countries", "id", "region_id");

       createor.connection_close();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void delete_db(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButton3ActionPerformed

        DatabaseConnector db= new DatabaseConnector();
        Connection conn = db.connection("reactorsdb", "lovsev", "1Ety3jNsHOqlyDG9HS1C4fotbzzfHjnx");
        ExcelProvider reactors = new ExcelProvider();

        Statement stmt = conn.createStatement();
        String[] tableNames = {"units", "sites", "regions", "companies", "countries"};

        for (String tableName: tableNames){
            String sql = "DROP TABLE " + tableName + " CASCADE";
            try {
                stmt.executeUpdate(sql);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
            System.out.println("Table " + tableName + " dropped successfully");
        }









        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    // get all data from database needed to compute


    public  void compute_consumption(String column_name) throws SQLException, IOException, XMLStreamException {


        String file = choose_file();

        Compute_executor qe = new Compute_executor();
        HashMap<String,Double> region = qe.Coumpute( column_name, file);
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setRowCount(0);
        for (String key: region.keySet()) {
            tableModel.addRow(new Object[]{key, region.get(key)});
        }
    }
    private void compute_regions(java.awt.event.ActionEvent evt) throws SQLException, IOException, XMLStreamException {//GEN-FIRST:event_jButton4ActionPerformed
            compute_consumption("region_name");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void compute_countries(java.awt.event.ActionEvent evt) throws SQLException, IOException, XMLStreamException {//GEN-FIRST:event_jButton5ActionPerformed
        compute_consumption("country_name");

    }//GEN-LAST:event_jButton5ActionPerformed

    private void compute_companies(java.awt.event.ActionEvent evt) throws SQLException, IOException, XMLStreamException {//GEN-FIRST:event_jButton6ActionPerformed
        compute_consumption("companies_name");

    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lab_3Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lab_3Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lab_3Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lab_3Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lab_3Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton create_button;
    private javax.swing.JButton delete_button;
    private javax.swing.JButton conpute_regions_button;
    private javax.swing.JButton compute_countries_button;
    private javax.swing.JButton compute_companies_button;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
